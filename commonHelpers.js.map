{"version":3,"file":"commonHelpers.js","sources":["../src/js/header.js","../src/js/about-me.js","../src/js/projects.js","../src/js/work-together.js","../src/js/modal-window.js"],"sourcesContent":["\nconst menu = document.querySelector(\".menu-title\");\nconst menuList = document.querySelector(\".menu-list\")\nmenu.addEventListener(\"click\", onMenuClick);\n\nfunction onMenuClick() {\n    if (menuList.classList.contains(\"visually-hidden-menu\")) {\n        \n        menuList.classList.remove(\"visually-hidden-menu\");\n        menuList.classList.add(\"visually-visible-menu\");\n\n    } else {\n         menuList.classList.remove(\"visually-visible-menu\");\n        menuList.classList.add(\"visually-hidden-menu\");\n    }\n    \n \n}","const accordions = document.querySelectorAll('.accordion');\naccordions.forEach(accordion => {\n  new Accordion(accordion);\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const accordionItems = document.querySelectorAll('.about-con-list-iteam');\n\n  function toggleAccordion() {\n    this.classList.toggle('active');\n    const content = this.querySelector('.about-con-list-iteam-id');\n    content.style.display === 'block'\n      ? (content.style.display = 'none')\n      : (content.style.display = 'block');\n\n    const icon = this.querySelector('.about-con-list-iteam-sec-icon svg path');\n    icon.classList.toggle('rotate');\n  }\n\n  accordionItems.forEach(item => {\n    item.addEventListener('click', toggleAccordion);\n  });\n\n  for (let i = 1; i < accordionItems.length; i++) {\n    const content = accordionItems[i].querySelector('.about-con-list-iteam-id');\n    content.style.display = 'none';\n  }\n});\n","// core version + navigation, pagination modules:\nimport Swiper from 'swiper';\nimport { Navigation } from 'swiper/modules';\n// import Swiper and modules styles\nimport 'swiper/css';\nimport 'swiper/css/navigation';\n\n// init Swiper:\nconst swiper = new Swiper('.swiper', {\n  // configure Swiper to use modules\n  modules: [Navigation],\n  direction: 'horizontal',\n  loop: true,\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n});","const formEl = document.querySelector('.work-form');\nconst emailEl = document.querySelector('.work-form input[name=email]');\nconst commentsEl = document.querySelector('.work-form input[name=comment]');\nconst succesEl = document.querySelector('.work-form-succes');\nconst invalidEl = document.querySelector('.work-form-invalid')\n\nsuccesEl.style.display = 'none';\ninvalidEl.style.display = 'none';\n\nconst localKey = 'work-form-state';\nlet formDataEl = {};\n\nfillFormFields();\n\nformEl.addEventListener(\n  'input',\n  event => {\n    formDataEl[event.target.name] = event.target.value;\n    localStorage.setItem(localKey, JSON.stringify(formDataEl));\n  }\n);\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  if (emailEl.value !== '' && commentsEl.value !== '') {\n    console.log(formDataEl);\n    localStorage.removeItem(localKey);\n    event.currentTarget.reset();\n    return;\n  }\n  alert('All fields must be filled!');\n});\n\nfunction fillFormFields() {\n  const saveFormFields = localStorage.getItem(localKey);\n  if (saveFormFields) {\n    formDataEl = JSON.parse(saveFormFields);\n    emailEl.value = formDataEl.email || '';\n    commentsEl.value = formDataEl.comment || '';\n  }\n}","\nconst openMenuBtn = document.querySelector(\".open-mobile-menu\");\nconst closeMenuBtn = document.querySelector(\".close-menu\");\nconst menu = document.querySelector(\".mobile-menu\");\n\n\nopenMenuBtn.addEventListener(\"click\", onOpenMobileMenu);\ncloseMenuBtn.addEventListener(\"click\", onCloseMobileMenu);\n\nfunction onOpenMobileMenu() {\n   \n    menu.classList.add(\"is-open\");\n \n}\n\nfunction onCloseMobileMenu() {\n   \n    menu.classList.remove(\"is-open\");\n \n}"],"names":["menu","menuList","onMenuClick","accordions","accordion","accordionItems","toggleAccordion","content","item","i","Swiper","Navigation","formEl","emailEl","commentsEl","succesEl","invalidEl","localKey","formDataEl","fillFormFields","event","saveFormFields","openMenuBtn","closeMenuBtn","onOpenMobileMenu","onCloseMobileMenu"],"mappings":"6vBACA,MAAMA,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAW,SAAS,cAAc,YAAY,EACpDD,EAAK,iBAAiB,QAASE,CAAW,EAE1C,SAASA,GAAc,CACfD,EAAS,UAAU,SAAS,sBAAsB,GAElDA,EAAS,UAAU,OAAO,sBAAsB,EAChDA,EAAS,UAAU,IAAI,uBAAuB,IAG7CA,EAAS,UAAU,OAAO,uBAAuB,EAClDA,EAAS,UAAU,IAAI,sBAAsB,EAIrD,CCjBA,MAAME,EAAa,SAAS,iBAAiB,YAAY,EACzDA,EAAW,QAAQC,GAAa,CAC9B,IAAI,UAAUA,CAAS,CACzB,CAAC,EAED,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,MAAMC,EAAiB,SAAS,iBAAiB,uBAAuB,EAExE,SAASC,GAAkB,CACzB,KAAK,UAAU,OAAO,QAAQ,EAC9B,MAAMC,EAAU,KAAK,cAAc,0BAA0B,EAC7DA,EAAQ,MAAM,UAAY,QACrBA,EAAQ,MAAM,QAAU,OACxBA,EAAQ,MAAM,QAAU,QAEhB,KAAK,cAAc,yCAAyC,EACpE,UAAU,OAAO,QAAQ,CAC/B,CAEDF,EAAe,QAAQG,GAAQ,CAC7BA,EAAK,iBAAiB,QAASF,CAAe,CAClD,CAAG,EAED,QAASG,EAAI,EAAGA,EAAIJ,EAAe,OAAQI,IAAK,CAC9C,MAAMF,EAAUF,EAAeI,CAAC,EAAE,cAAc,0BAA0B,EAC1EF,EAAQ,MAAM,QAAU,MACzB,CACH,CAAC,ECnBc,IAAIG,EAAO,UAAW,CAEnC,QAAS,CAACC,CAAU,EACpB,UAAW,aACX,KAAM,GACN,WAAY,CACV,OAAQ,sBACR,OAAQ,qBACT,CACH,CAAC,ECjBD,MAAMC,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAU,SAAS,cAAc,8BAA8B,EAC/DC,EAAa,SAAS,cAAc,gCAAgC,EACpEC,EAAW,SAAS,cAAc,mBAAmB,EACrDC,EAAY,SAAS,cAAc,oBAAoB,EAE7DD,EAAS,MAAM,QAAU,OACzBC,EAAU,MAAM,QAAU,OAE1B,MAAMC,EAAW,kBACjB,IAAIC,EAAa,CAAA,EAEjBC,IAEAP,EAAO,iBACL,QACAQ,GAAS,CACPF,EAAWE,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAC7C,aAAa,QAAQH,EAAU,KAAK,UAAUC,CAAU,CAAC,CAC1D,CACH,EAEAN,EAAO,iBAAiB,SAAUQ,GAAS,CAEzC,GADAA,EAAM,eAAc,EAChBP,EAAQ,QAAU,IAAMC,EAAW,QAAU,GAAI,CACnD,QAAQ,IAAII,CAAU,EACtB,aAAa,WAAWD,CAAQ,EAChCG,EAAM,cAAc,QACpB,MACD,CACD,MAAM,4BAA4B,CACpC,CAAC,EAED,SAASD,GAAiB,CACxB,MAAME,EAAiB,aAAa,QAAQJ,CAAQ,EAChDI,IACFH,EAAa,KAAK,MAAMG,CAAc,EACtCR,EAAQ,MAAQK,EAAW,OAAS,GACpCJ,EAAW,MAAQI,EAAW,SAAW,GAE7C,CCvCA,MAAMI,EAAc,SAAS,cAAc,mBAAmB,EACxDC,EAAe,SAAS,cAAc,aAAa,EACnDvB,EAAO,SAAS,cAAc,cAAc,EAGlDsB,EAAY,iBAAiB,QAASE,CAAgB,EACtDD,EAAa,iBAAiB,QAASE,CAAiB,EAExD,SAASD,GAAmB,CAExBxB,EAAK,UAAU,IAAI,SAAS,CAEhC,CAEA,SAASyB,GAAoB,CAEzBzB,EAAK,UAAU,OAAO,SAAS,CAEnC"}